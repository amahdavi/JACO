specplot 16

	da $1
        define asprat 1
        define byebye 0
        if ($?2) {
          if ($2 != "0") {
            device postencap specplot.eps
            define asprat $2
            define byebye 1
          }
        } else {
          device x11 -bg black -geometry 1024x1024
        }
	read { files 1.s r1 2 r2 3 }
        define ntot dimen(files)
        
        define nx (int(sqrt($ntot)))
        define ny ($ntot == $nx*$nx ? $nx : $nx+1)
        define nx ($ntot > $nx*$ny ? $nx+1 : $nx)
        define exf (0.3+2./$nx)
        define exl (0.1+2./$nx)
        define sumchi 0
        define nax (int($asprat*sqrt($nx*$ny)))
        #define ny $nx
        define owy -1
        do i = 0,$($ntot-1) {
                define wy (20*($ny-int($i/$nx)-1))
                echo $i $ntot $wy $nx $ny
                define dotpos (index(files[$i],'.')+1)
                define instr  (substr(files[$i],$dotpos,2))
                if ((r2[$i]-r1[$i]) < 0.1 || r1[$i] < 0.1) {
                    define lab$i (sprintf('%s ','$instr')\
                                 +sprintf('%.2fs\'-',r1[$i])\
                                +sprintf('%.2f\'',r2[$i]))
                } else { 
                    define lab$i (sprintf('%s ','$instr')\
                                 +sprintf('%.1f\'-',r1[$i])\
                                +sprintf('%.1f\'',r2[$i]))
                }
                define fn (sprintf('%s.dat',files[$i]))
		da $fn
                read x$i 1 
                read y$i 2 
                read err$i 3
                read m$i 4
                set f = (m$i > 0 ? y$i-err$i : 0)
                set x$i = x$i if (f > 0)
                set m$i = m$i if (f > 0)
                set err$i = err$i if (f > 0)
                set y$i = y$i if (f > 0)
                set diff = (y$i-m$i)/err$i
                define chisq$i (1.*sum(diff*diff)/2.)
                define sumchi ($sumchi+$chisq$i)
                verbose 1
                set res$i = (m$i-y$i)/err$i
                set ep$i = lg(y$i+err$i)
                set em$i = lg(y$i-err$i+1.e-12)
                set x$i = lg(x$i)
                set y$i = lg(y$i)
                set m$i = lg(m$i)
                if ($wy != $owy) {
                   set ylims$wy = y$i concat m$i
                } else {
                   set ylims$wy = ylims$wy concat y$i concat m$i
                }
                if ($i == 0) {
                   set xlims = x$i
                   set reslims = res$i
                } else {
                   set xlims = xlims concat x$i
                   set reslims = reslims concat res$i
                }
                define owy $wy
        }
        do i = 0,$($ntot-1) {
                expand $exf
                define wx (($i % $nx)+1)
                define wy (20*($ny-int($i/$nx)-1))
                window -$nax -$($ny*20) $wx $($wy+8):$($wy+20)
                limits xlims ylims$wy
                if ($?4) { limits xlims $(lg($3)) $(lg($4)) }
                do j = 0,$(dimen(y$i)-1) {
                  connect (<$(x$i[$j]) $(x$i[$j])>) (<$(em$i[$j]) $(ep$i[$j])>)
                }
                connect x$i m$i
                ticksize -1 5 -1 10
                box 0 $(2*($wx == 1)) 3 3
                limits 0 1 0 1
                rel $(0.36/$asprat) 0.88
                expand $exl
                label $lab$i
                rel $(0.16/$asprat) 0.32
                define chilab (sprintf('%.0f%%',100.*$chisq$i/$sumchi))
                label $chilab
                window -$nax -$($ny*20) $wx $($wy+2):$($wy+7)
                limits xlims reslims
                if ($?6) { limits xlims $5 $6 }
                ptype 10 0
                points x$i res$i
                expand $exf
                set z = m$i-m$i
                connect x$i z
                ticksize -1 5  2 2
                box $(($wy == 0)) $(2*($wx == 1)) 3 3
	}
        window 1 1 1 1
	xlabel Photon Energy (keV)
        ylabel Counts/s/keV
        if ($?3 != 0) {
            toplabel $3
        }
        if ($byebye) { quit }
